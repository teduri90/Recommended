[{"D:\\Map SNS Project\\map\\src\\App.js":"1","D:\\Map SNS Project\\map\\src\\reportWebVitals.js":"2","D:\\Map SNS Project\\map\\src\\index.js":"3","D:\\Map SNS Project\\map\\src\\Navbar.js":"4","D:\\Map SNS Project\\map\\src\\KakaoMap.js":"5","D:\\Map SNS Project\\map\\src\\Drawer.js":"6","D:\\Map SNS Project\\map\\src\\InfoBar.js":"7","D:\\Map SNS Project\\map\\src\\Context.js":"8"},{"size":4146,"mtime":1613662246202,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611578473103,"results":"11","hashOfConfig":"10"},{"size":535,"mtime":1613568158359,"results":"12","hashOfConfig":"10"},{"size":1956,"mtime":1613656266531,"results":"13","hashOfConfig":"10"},{"size":6191,"mtime":1613663095633,"results":"14","hashOfConfig":"10"},{"size":2118,"mtime":1613661902239,"results":"15","hashOfConfig":"10"},{"size":170,"mtime":1613569373404,"results":"16","hashOfConfig":"10"},{"size":624,"mtime":1613654750234,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11isfjb",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"D:\\Map SNS Project\\map\\src\\App.js",["39","40","41","42","43","44","45","46"],"D:\\Map SNS Project\\map\\src\\reportWebVitals.js",[],"D:\\Map SNS Project\\map\\src\\index.js",["47"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport KakaoMap from './KakaoMap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","D:\\Map SNS Project\\map\\src\\Navbar.js",["48","49","50","51","52"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { GlobalZoomLevel } from './Context';\r\nimport { Dragonball } from './App.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  menuitem: {\r\n    borderRadius: \"0%\", \r\n    '&:hover' : { \r\n        backgroundColor: \"white\",\r\n        color: \"blue\",\r\n    }\r\n  },\r\n}));\r\n\r\nconst Navbar = ({menuselect}) => {\r\n  const classes = useStyles();\r\n\r\n  const [restaurant, setRestaurant ] = useState('restaurant');\r\n  const [cafe, setCafe ] = useState('cafe');\r\n  const [date, setDate ] = useState('date');\r\n\r\n  const { setZoomlevel } = useContext(Dragonball);\r\n  /// static contextType = GlobalZoomLevel\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n            <MenuItem onClick={()=>menuselect('')} className={classes.menuitem}>\r\n                All\r\n            </MenuItem>\r\n            <MenuItem onClick={()=>setZoomlevel(7)} className={classes.menuitem}>\r\n                Restaurant\r\n            </MenuItem>\r\n            <MenuItem onClick={()=>menuselect(cafe)} className={classes.menuitem}>\r\n                Cafe\r\n            </MenuItem>\r\n            <MenuItem onClick={()=>menuselect(date)} className={classes.menuitem}>\r\n                Date\r\n            </MenuItem>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;","D:\\Map SNS Project\\map\\src\\KakaoMap.js",["53"],"import React, { useContext, useEffect } from 'react';\r\n// import { GlobalZoomLevelProvider } from '../context';\r\nimport { GlobalZoomLevel } from './Context';\r\nimport { Dragonball } from './App.js';\r\nimport Navbar from './Navbar';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst APP_KEY = '0084e0c6e15e687676ff408fc074def6'\r\n\r\nconst KakaoMap = ({filter1, filter2, coords, setFilter1, setFilter2, userinfoselect, latitude, longitude, longlatselect,zoomselect, setZoomlevel}) => {\r\n    \r\n    const {zoomlevel, settrackZoomlevel} = useContext(Dragonball);\r\n    const filterchange2 = filter1;\r\n    const filterchange1 = filter2;\r\n    \r\n    useEffect(() => {\r\n    const script = document.createElement('script')\r\n    /// script.async = true\r\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=${APP_KEY}&autoload=false`\r\n    document.head.appendChild(script)\r\n    script.onload = () => {\r\n        const { kakao } = window\r\n        \r\n        \r\n        kakao.maps.load(() => {\r\n            \r\n            \r\n            let container = document.getElementById('KakaoMapLoad')\r\n            let options = {\r\n                center: new kakao.maps.LatLng(latitude, longitude),\r\n                // center: new kakao.maps.LatLng(latitude, longitude),\r\n                level: zoomlevel,\r\n                // level: zoomlevel,\r\n            };\r\n        const KakaoMapDefault = new kakao.maps.Map(container, options)        \r\n        //console.log(filter1);\r\n        //console.log(filter2);\r\n        //console.log(coords);\r\n\r\n        var coordsFilter = coords;\r\n\r\n        if(filter1 !== '' && filter2 !== '') {\r\n            coordsFilter = coords.filter(e => e.category === filter1 && e.user === filter2);\r\n            //setFilter1('');\r\n            //setFilter2('');\r\n        } else if (filter1 !== '') {\r\n            coordsFilter = coords.filter(e => e.category === filter1);\r\n            //setFilter1('');\r\n        } else if (filter2 !== '') {\r\n            coordsFilter = coords.filter(e => e.user === filter2);\r\n            //setFilter2('');\r\n        } else {\r\n            coordsFilter = coords;\r\n        }\r\n\r\n        coordsFilter.forEach((e) => {\r\n            var imageSrc = 'https://picsum.photos/id/237/200/200', // 마커이미지의 주소입니다    \r\n            imageSize = new kakao.maps.Size(40, 40), // 마커이미지의 크기입니다\r\n            imageOption = {offset: new kakao.maps.Point(27, 69)}; // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n            \r\n            var markerImage = new kakao.maps.MarkerImage(e.src, imageSize, imageOption)\r\n                \r\n            const marker = new kakao.maps.Marker({\r\n                map: KakaoMapDefault,\r\n                position: new kakao.maps.LatLng(e.lat, e.lng),\r\n                image: markerImage,\r\n            })\r\n\r\n            var content = '<div class=\"wrap\">' + \r\n            '    <div class=\"info\">' + \r\n            '        <div class=\"title\">' + \r\n            '            카카오 스페이스닷원' + \r\n            '            <div class=\"close\" onclick=\"closeOverlay()\" title=\"닫기\"></div>' + \r\n            '        </div>' + \r\n            '        <div class=\"body\">' + \r\n            '            <div class=\"img\">' +\r\n            '                <img src=\"https://picsum.photos/id/100/200/200\" width=\"73\" height=\"70\">' +\r\n            '           </div>' + \r\n            '            <div class=\"desc\">' + \r\n            '                <div class=\"ellipsis\">제주특별자치도 제주시 첨단로 242</div>' + \r\n            '                <div class=\"jibun ellipsis\">(우) 63309 (지번) 영평동 2181</div>' + \r\n            '                <div><a href=\"https://www.kakaocorp.com/main\" target=\"_blank\" class=\"link\">홈페이지</a></div>' + \r\n            '            </div>' + \r\n            '        </div>' + \r\n            '    </div>' +    \r\n            '</div>';\r\n            \r\n            var customOverlay = new kakao.maps.CustomOverlay({\r\n                    map: KakaoMapDefault,\r\n                    position: new kakao.maps.LatLng(e.lat, e.lng),\r\n                    content: content,\r\n                    yAnchord: 1\r\n            })\r\n        \r\n            if(zoomlevel > 5) {\r\n                customOverlay.setMap(null)\r\n            } else {\r\n                customOverlay.setMap(KakaoMapDefault)\r\n            };\r\n            \r\n\r\n            // 좌표 변경 확인\r\n            kakao.maps.event.addListener(KakaoMapDefault, 'dragend', function() {\r\n                var latlng = KakaoMapDefault.getBounds(); \r\n                var centerget = KakaoMapDefault.getCenter();\r\n                var zoomget = KakaoMapDefault.getLevel();\r\n                //console.log(latlng)\r\n                var oaoa = latlng.oa;\r\n                var haha = latlng.ha;\r\n                var qaqa = latlng.qa;\r\n                var papa = latlng.pa;\r\n                var centercenter = centerget;\r\n                var zoomzoom = zoomget;\r\n\r\n                //console.log(oaoa);\r\n                //console.log(centercenter);\r\n                //console.log(centercenter.La);\r\n                //console.log(centercenter.Ma);\r\n                //console.log(zoomzoom);\r\n                console.log(zoomlevel);\r\n                zoomselect(zoomzoom);\r\n                longlatselect(centercenter);\r\n                //setNavLatitude(centercenter.La);\r\n                //setNavLongitude(centercenter.Ma);\r\n                // settrackZoomlevel(centercenter);\r\n\r\n            })        \r\n\r\n            // 클릭 시 관련 정보 표시 // 혹은 페이지 내 정보 검색 후 Info 창 표시\r\n            kakao.maps.event.addListener(marker, 'click', function(mouseEvent) {  \r\n                userinfoselect(marker.position);       \r\n                console.log(marker.position);\r\n            });\r\n\r\n        });\r\n    }); // SCRIPT 종료\r\n}},[zoomlevel, filterchange1, filterchange2]);\r\n// WHEN filter are triggered, trigger the saved setting ... \r\n\r\n    return (\r\n        <div>\r\n        <div id=\"KakaoMapLoad\" style={{ width: '80vw', height: '80vh' }}>\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n\r\n};\r\n\r\nexport default KakaoMap;","D:\\Map SNS Project\\map\\src\\Drawer.js",["54","55","56"],"D:\\Map SNS Project\\map\\src\\InfoBar.js",["57"],"import React, { useState } from 'react';\r\n\r\nconst InfoBar = ({userInfo}) => {\r\n\r\n  return (\r\n    <div>\r\n        {userInfo}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoBar;","D:\\Map SNS Project\\map\\src\\Context.js",["58","59"],"import React, { useState, createContext } from 'react';\r\n\r\nexport const GlobalZoomLevel = createContext({ \r\n    state: {level: 8},\r\n    action: {setZoom: () => {}}\r\n});\r\n\r\n\r\n/*\r\nconst GlobalZoomLevelProvider = ({ children }) => {\r\n    const [level, setZoom] = useState(8);\r\n\r\n    const value = {\r\n        state: { level },\r\n        action: { setZoom }\r\n    }\r\n\r\n    return (\r\n        <GlobalZoomLevelProvider value={value}>{children}</GlobalZoomLevelProvider>\r\n    );\r\n\r\n};*/\r\n\r\n// const { Consumer: GlobalZoomLevelConsumer } = GlobalZoomLevel;\r\n\r\n// export { GlobalZoomLevelProvider };\r\n\r\n// export default GlobalZoomLevel;",{"ruleId":"60","severity":1,"message":"61","line":2,"column":27,"nodeType":"62","messageId":"63","endLine":2,"endColumn":37},{"ruleId":"60","severity":1,"message":"64","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":25},{"ruleId":"60","severity":1,"message":"65","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":11},{"ruleId":"60","severity":1,"message":"66","line":25,"column":12,"nodeType":"62","messageId":"63","endLine":25,"endColumn":26},{"ruleId":"60","severity":1,"message":"67","line":26,"column":12,"nodeType":"62","messageId":"63","endLine":26,"endColumn":25},{"ruleId":"60","severity":1,"message":"68","line":26,"column":27,"nodeType":"62","messageId":"63","endLine":26,"endColumn":43},{"ruleId":"60","severity":1,"message":"69","line":27,"column":12,"nodeType":"62","messageId":"63","endLine":27,"endColumn":26},{"ruleId":"60","severity":1,"message":"70","line":27,"column":28,"nodeType":"62","messageId":"63","endLine":27,"endColumn":45},{"ruleId":"60","severity":1,"message":"71","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":8,"column":10,"nodeType":"62","messageId":"63","endLine":8,"endColumn":25},{"ruleId":"60","severity":1,"message":"72","line":33,"column":10,"nodeType":"62","messageId":"63","endLine":33,"endColumn":20},{"ruleId":"60","severity":1,"message":"73","line":33,"column":22,"nodeType":"62","messageId":"63","endLine":33,"endColumn":35},{"ruleId":"60","severity":1,"message":"74","line":34,"column":16,"nodeType":"62","messageId":"63","endLine":34,"endColumn":23},{"ruleId":"60","severity":1,"message":"75","line":35,"column":16,"nodeType":"62","messageId":"63","endLine":35,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"76","line":95,"column":28},{"ruleId":"60","severity":1,"message":"77","line":30,"column":20,"nodeType":"62","messageId":"63","endLine":30,"endColumn":31},{"ruleId":"60","severity":1,"message":"78","line":33,"column":10,"nodeType":"62","messageId":"63","endLine":33,"endColumn":14},{"ruleId":"60","severity":1,"message":"79","line":33,"column":16,"nodeType":"62","messageId":"63","endLine":33,"endColumn":23},{"ruleId":"60","severity":1,"message":"80","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"81","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"80","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'GlobalZoomLevel' is defined but never used.","'Fab' is defined but never used.","'trackzoomlevel' is assigned a value but never used.","'tracklatitude' is assigned a value but never used.","'settrackLatitude' is assigned a value but never used.","'tracklongitude' is assigned a value but never used.","'settrackLongitude' is assigned a value but never used.","'KakaoMap' is defined but never used.","'restaurant' is assigned a value but never used.","'setRestaurant' is assigned a value but never used.","'setCafe' is assigned a value but never used.","'setDate' is assigned a value but never used.","Parsing error: Unexpected token\n\n  93 |             })\n  94 |         \n> 95 |             if(zoomlevel > ) {\n     |                            ^\n  96 |                 customOverlay.setMap(null)\n  97 |             } else {\n  98 |                 customOverlay.setMap(KakaoMapDefault)","'setUserList' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'useState' is defined but never used.","'React' is defined but never used."]